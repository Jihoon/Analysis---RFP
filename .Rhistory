variable %in% c("Final Energy", "GDP|MER")) %>%
filter(period >= init_year) %>%
select(model, scenario, region, variable, period, value) %>%
spread(variable, value) %>%
rename(fe_ref=`Final Energy`, gdp_ref=`GDP|MER`),
by=c("model", "baseline"="scenario", "region", "period")) %>%
rename(invss_pol=`Investment|Energy Supply`, fe_pol=`Final Energy`, gdp_pol=`GDP|MER`) %>%
right_join(
expand.grid(
model=unique(df_cdlinks_l$model),
scenario=unique(df_cdlinks_l$scenario),
region=unique(df_cdlinks_l$region),
period=init_year:2100),
by=c("model","scenario","region","period")) %>%
group_by(model, scenario, region) %>%
mutate(baseline=baseline[1]) %>%
# arrange(model, scenario, region) %>%  # Complete missing values of baseline variable
mutate(invss_pol = na.approx(invss_pol)) %>%
mutate(fe_pol    = na.approx(fe_pol)) %>%
mutate(fe_ref    = ifelse(!is.na(baseline), na.approx(fe_ref), fe_ref)) %>%
mutate(gdp_pol   = na.approx(gdp_pol)) %>%
mutate(gdp_ref   = ifelse(!is.na(baseline), na.approx(gdp_ref), gdp_ref)) %>%
ungroup()
library(zoo)
init_year = 2010
a= df_cdlinks_l %>%
filter(period >= init_year) %>%
filter(variable %in% c("Investment|Energy Supply", "Final Energy", "GDP|MER")) %>%
select(-unit) %>%
spread(variable, value) %>%
left_join(
df_cdlinks_l %>%
filter(
is.na(baseline),
variable %in% c("Final Energy", "GDP|MER")) %>%
filter(period >= init_year) %>%
select(model, scenario, region, variable, period, value) %>%
spread(variable, value) %>%
rename(fe_ref=`Final Energy`, gdp_ref=`GDP|MER`),
by=c("model", "baseline"="scenario", "region", "period")) %>%
rename(invss_pol=`Investment|Energy Supply`, fe_pol=`Final Energy`, gdp_pol=`GDP|MER`) %>%
right_join(
expand.grid(
model=unique(df_cdlinks_l$model),
scenario=unique(df_cdlinks_l$scenario),
region=unique(df_cdlinks_l$region),
period=init_year:2100),
by=c("model","scenario","region","period")) %>%
group_by(model, scenario, region) %>%
mutate(baseline=baseline[1]) %>%
# arrange(model, scenario, region) %>%  # Complete missing values of baseline variable
mutate(invss_pol = na.approx(invss_pol)) %>%
mutate(fe_pol    = na.approx(fe_pol)) %>%
mutate(fe_ref    = ifelse(!is.na(baseline), na.approx(fe_ref), fe_ref)) %>%
mutate(gdp_pol   = na.approx(gdp_pol)) %>%
mutate(gdp_ref   = ifelse(!is.na(baseline), na.approx(gdp_ref), gdp_ref)) %>%
ungroup()  %>%
# Cumulate values
group_by(model, scenario, region) %>%
arrange(period) %>%
mutate(invss_pol_cs = cumsum(invss_pol)) %>%
mutate(fe_pol_cs    = cumsum(fe_pol)) %>%
mutate(fe_ref_cs    = cumsum(fe_ref)) %>%
mutate(gdp_pol_cs   = cumsum(gdp_pol)) %>%
mutate(gdp_ref_cs   = cumsum(gdp_ref)) %>%
# Compute annualised values
mutate(invss_pol_acs = invss_pol_cs/(period-2015+1)) %>%
mutate(fe_pol_acs    = fe_pol_cs/(period-2015+1)) %>%
mutate(fe_ref_acs    = fe_ref_cs/(period-2015+1)) %>%
mutate(gdp_pol_acs   = gdp_pol_cs/(period-2015+1)) %>%
mutate(gdp_ref_acs   = gdp_ref_cs/(period-2015+1)) %>%
ungroup() %>%
mutate(`Investment|Energy Efficiency` = invss_pol_acs/fe_pol_acs*(fe_ref_acs-fe_pol_acs)*gdp_pol_acs/gdp_ref_acs*1e3) %>% # billion US$ / EJ * EJ * 1 * 1e3 -> million US$
gather(variable, value, -v_otherColumns) %>%
mutate(unit = "million US$2010") %>%
filter(variable == "Investment|Energy Efficiency", !is.na(baseline)) %>%
select(v_colnames)
a= df_cdlinks_l %>%
filter(period >= init_year) %>%
filter(variable %in% c("Investment|Energy Supply", "Final Energy", "GDP|MER")) %>%
select(-unit) %>%
spread(variable, value) %>%
left_join(
df_cdlinks_l %>%
filter(
is.na(baseline),
variable %in% c("Final Energy", "GDP|MER")) %>%
filter(period >= init_year) %>%
select(model, scenario, region, variable, period, value) %>%
spread(variable, value) %>%
rename(fe_ref=`Final Energy`, gdp_ref=`GDP|MER`),
by=c("model", "baseline"="scenario", "region", "period")) %>%
rename(invss_pol=`Investment|Energy Supply`, fe_pol=`Final Energy`, gdp_pol=`GDP|MER`) %>%
right_join(
expand.grid(
model=unique(df_cdlinks_l$model),
scenario=unique(df_cdlinks_l$scenario),
region=unique(df_cdlinks_l$region),
period=init_year:2100),
by=c("model","scenario","region","period")) %>%
group_by(model, scenario, region) %>%
mutate(baseline=baseline[1]) %>%
# arrange(model, scenario, region) %>%  # Complete missing values of baseline variable
mutate(invss_pol = na.approx(invss_pol)) %>%
mutate(fe_pol    = na.approx(fe_pol)) %>%
mutate(fe_ref    = ifelse(!is.na(baseline), na.approx(fe_ref), fe_ref)) %>%
mutate(gdp_pol   = na.approx(gdp_pol)) %>%
mutate(gdp_ref   = ifelse(!is.na(baseline), na.approx(gdp_ref), gdp_ref)) %>%
ungroup()  %>%
# Cumulate values
group_by(model, scenario, region) %>%
arrange(period) %>%
mutate(invss_pol_cs = cumsum(invss_pol)) %>%
mutate(fe_pol_cs    = cumsum(fe_pol)) %>%
mutate(fe_ref_cs    = cumsum(fe_ref)) %>%
mutate(gdp_pol_cs   = cumsum(gdp_pol)) %>%
mutate(gdp_ref_cs   = cumsum(gdp_ref)) %>%
# Compute annualised values
mutate(invss_pol_acs = invss_pol_cs/(period-init_year+1)) %>%
mutate(fe_pol_acs    = fe_pol_cs/(period-init_year+1)) %>%
mutate(fe_ref_acs    = fe_ref_cs/(period-init_year+1)) %>%
mutate(gdp_pol_acs   = gdp_pol_cs/(period-init_year+1)) %>%
mutate(gdp_ref_acs   = gdp_ref_cs/(period-init_year+1)) %>%
ungroup()
library(rfp)
df_cdlinks_l = df_cdlinks %>% gather(key="period", "value", -(model:unit)) %>%
mutate(period = as.numeric(gsub("x", "", period))) %>%
filter(region=="World" & grepl("NPi", scenario)) %>%
mutate(region = factor(region, levels = levels(assumptions$DEC_OilGasCoalShares$region))) %>%
mutate(baseline = case_when(grepl("SSP1", scenario) ~ "NPi_SSP1_V4",
grepl("SSP3", scenario) ~ "NPi_SSP3_V4",
TRUE ~ "NPi_V4")) %>%
mutate(baseline = ifelse(scenario==baseline, NA, baseline)) # There must be NA's in baseline column.
df_rfp_pik_l = rfp_lcinv(df_cdlinks_l, VERSION = "pik")
detach("package:rfp", unload=TRUE)
remove.packages("rfp")
library(rfp)
df_rfp_pik_l = rfp_lcinv(df_cdlinks_l, VERSION = "pik")
df_rfp_pik_l = rfp_lcinv(df_cdlinks_l, rmapping, VERSION = "pik")
?rfp_lcinv
df_rfp_pik_l = rfp_lcinv(df_cdlinks_l, rmapping, VERSION = "unepfi1")
rmapping = data.frame(region_data='World', region_assumption='World')
df_rfp_pik_l = rfp_lcinv(df_cdlinks_l, rmapping, VERSION = "unepfi1")
?compute_rfp
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, rmapping, VERSION = "unepfi1")
df_rfp_unepfi1_ind_l = rfp_indirect_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = FALSE)  # Trying to debug having all NA for indirect cost part
library("rfp", lib.loc="~/R/win-library/3.5")
detach("package:rfp", unload=TRUE)
library(rfp)
df_rfp_unepfi1_ind_l = rfp_indirect_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = FALSE)  # Trying to debug having all NA for indirect cost part
View(df_rfp_unepfi1_ind_l)
detach("package:rfp", unload=TRUE)
library("rfp", lib.loc="~/R/win-library/3.5")
df_rfp_unepfi1_ind_l = rfp_indirect_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = FALSE)  # Trying to debug having all NA for indirect cost part
View(df_rfp_unepfi1_ind_l)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, rmapping, VERSION = "unepfi1")
warnings()
detach("package:rfp", unload=TRUE)
library("rfp", lib.loc="~/R/win-library/3.5")
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, rmapping, VERSION = "unepfi1")
warnings()
detach("package:rfp", unload=TRUE)
library("rfp", lib.loc="~/R/win-library/3.5")
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, rmapping, VERSION = "unepfi1")
detach("package:rfp", unload=TRUE)
library("rfp", lib.loc="~/R/win-library/3.5")
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, rmapping, VERSION = "unepfi1")
warnings()
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, rmapping, VERSION = "unepfi1", VERBOSE=TRUE)
rmapping = data.frame(region_data='World', region_assumption='World')
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, rmapping, VERSION = "unepfi1", VERBOSE=TRUE)
df_rfp_unepfi1_l = rfp_lcinv(df_cdlinks_l, rmapping, VERSION = "unepfi1", VERBOSE = FALSE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_direct_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = FALSE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_direct_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_indirect_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_lcinv(df_cdlinks_l, rmapping, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_revenue(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_direct_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_indirect_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_lcinv(df_cdlinks_l, rmapping, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_revenue(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
detach("package:rfp", unload=TRUE)
library("rfp", lib.loc="~/R/win-library/3.5")
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, rmapping, VERSION = "unepfi1", VERBOSE=TRUE)
df_rfp_pik_l = compute_rfp(df_cdlinks_l, rmapping, VERSION = "pik")
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, rmapping, VERSION = "unepfi1", VERBOSE=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region-rmapping, VERSION = "unepfi1", VERBOSE=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=TRUE)
df_rfp_unepfi1_l = rfp_direct_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_indirect_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_lcinv(df_cdlinks_l, rmapping, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_revenue(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_pik_l = compute_rfp(df_cdlinks_l, rmapping, VERSION = "pik")
rmapping
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=TRUE)
df_rfp_unepfi1_l = rfp_direct_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_indirect_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_lcinv(df_cdlinks_l, rmapping, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
v_colnames              <- names(df_cdlinks_l)
v_otherColumns          <- v_colnames[which(!v_colnames %in% c("unit", "variable", "value"))]
v_otherColumns
a= df_cdlinks_l %>%
filter(period >= init_year) %>%
filter(variable %in% c("Investment|Energy Supply", "Final Energy", "GDP|MER")) %>%
select(-unit) %>%
spread(variable, value) %>%
left_join(
df_cdlinks_l %>%
filter(
is.na(baseline),
variable %in% c("Final Energy", "GDP|MER")) %>%
filter(period >= init_year) %>%
select(model, scenario, region, variable, period, value) %>%
spread(variable, value) %>%
rename(fe_ref=`Final Energy`, gdp_ref=`GDP|MER`),
by=c("model", "baseline"="scenario", "region", "period")) %>%
rename(invss_pol=`Investment|Energy Supply`, fe_pol=`Final Energy`, gdp_pol=`GDP|MER`) %>%
right_join(
expand.grid(
model=unique(df_cdlinks_l$model),
scenario=unique(df_cdlinks_l$scenario),
region=unique(df_cdlinks_l$region),
period=init_year:2100),
by=c("model","scenario","region","period")) %>%
group_by(model, scenario, region) %>%
mutate(baseline=baseline[1]) %>%
# arrange(model, scenario, region) %>%  # Complete missing values of baseline variable
mutate(invss_pol = na.approx(invss_pol)) %>%
mutate(fe_pol    = na.approx(fe_pol)) %>%
mutate(fe_ref    = ifelse(!is.na(baseline), na.approx(fe_ref), fe_ref)) %>%
mutate(gdp_pol   = na.approx(gdp_pol)) %>%
mutate(gdp_ref   = ifelse(!is.na(baseline), na.approx(gdp_ref), gdp_ref)) %>%
ungroup()  %>%
# Cumulate values
group_by(model, scenario, region) %>%
arrange(period) %>%
mutate(invss_pol_cs = cumsum(invss_pol)) %>%
mutate(fe_pol_cs    = cumsum(fe_pol)) %>%
mutate(fe_ref_cs    = cumsum(fe_ref)) %>%
mutate(gdp_pol_cs   = cumsum(gdp_pol)) %>%
mutate(gdp_ref_cs   = cumsum(gdp_ref)) %>%
# Compute annualised values
mutate(invss_pol_acs = invss_pol_cs/(period-init_year+1)) %>%
mutate(fe_pol_acs    = fe_pol_cs/(period-init_year+1)) %>%
mutate(fe_ref_acs    = fe_ref_cs/(period-init_year+1)) %>%
mutate(gdp_pol_acs   = gdp_pol_cs/(period-init_year+1)) %>%
mutate(gdp_ref_acs   = gdp_ref_cs/(period-init_year+1)) %>%
ungroup() %>%
mutate(`Investment|Energy Efficiency` = invss_pol_acs/fe_pol_acs*(fe_ref_acs-fe_pol_acs)*gdp_pol_acs/gdp_ref_acs*1e3) %>% # billion US$ / EJ * EJ * 1 * 1e3 -> million US$
gather(variable, value, -v_otherColumns) %>%
mutate(unit = "million US$2010") %>%
filter(variable == "Investment|Energy Efficiency", !is.na(baseline)) %>%
select(v_colnames)
v_colnames
View(a)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=TRUE)
compute_rfp
compute_rfp <- function(i_data, i_mapping_region, PED=1.0, PTC=1.0, VERSION="unepfi1", CHECK=FALSE, VERBOSE=FALSE) {
if (VERBOSE) cat("(compute_rfp) ------ [>>] Entering function... ------\n")
if (VERBOSE) {
cat("(compute_rfp) Check output of each RFP component:\n")
print(head(rfp_direct_cost(i_data, VERSION=VERSION, CHECK=FALSE, VERBOSE=FALSE)))
print(head(rfp_indirect_cost(i_data, VERSION=VERSION, CHECK=FALSE, VERBOSE=FALSE)))
print(head(rfp_lcinv(i_data, VERSION=VERSION, VERBOSE=FALSE)))
}
out <- rbind(
rfp_direct_cost(i_data, VERSION=VERSION, CHECK=CHECK, VERBOSE=VERBOSE),
rfp_indirect_cost(i_data, VERSION=VERSION, CHECK=CHECK, VERBOSE=VERBOSE),
rfp_lcinv(i_data, i_mapping_region, VERSION=VERSION, VERBOSE=VERBOSE))
out <- rfp_revenue(i_data, out, PED, PTC, VERSION=VERSION, VERBOSE=VERBOSE)
if (VERBOSE) cat("(compute_rfp) ------ [<<] Exiting function... ------\n\n")
return(out)
}
compute_rfp
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
}rfp_lcinv
rfp_lcinv
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
i_mapping_region
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
tmp
out <- tmp %>% select(-unit) %>% filter(variable %in%
p_variables) %>% rbind(i_rfp %>% select(-unit)) %>%
spread(variable, value)
names(out)
out <- tmp %>% select(-unit) %>% filter(variable %in%
p_variables) %>% rbind(i_rfp %>% select(-unit)) %>%
spread(variable, value) %>% mutate(`RFP|Revenues|Energy Supply` = 1000 *
(`Price|Final Energy|Residential|Electricity` *
`Final Energy|Electricity` + `Price|Final Energy|Residential|Solids|Biomass` *
`Final Energy|Solids|Biomass` + `Price|Final Energy|Residential|Solids|Coal` *
`Final Energy|Solids|Coal` + `Price|Final Energy|Residential|Gases|Natural Gas` *
`Final Energy|Gases` + `Price|Secondary Energy|Liquids` *
`Final Energy|Liquids` + `Price|Secondary Energy|Hydrogen` *
`Final Energy|Hydrogen`)) %>% mutate(`RFP|Revenue|Energy Supply|Coal` = `Price|Primary Energy|Coal` *
`Primary Energy|Coal` * 1000) %>% mutate(`RFP|Revenue|Energy Supply|Oil` = `Price|Primary Energy|Oil` *
`Primary Energy|Oil` * 1000) %>% mutate(`RFP|Revenue|Energy Supply|Gas` = `Price|Primary Energy|Gas` *
`Primary Energy|Gas` * 1000) %>% mutate(`RFP|Revenue|Energy Supply|Oil and gas` = `RFP|Revenue|Energy Supply|Oil` +
`RFP|Revenue|Energy Supply|Gas`) %>% mutate(`RFP|Revenue|Energy Supply|Fossil Fuels` = `RFP|Revenue|Energy Supply|Coal` +
`RFP|Revenue|Energy Supply|Oil` + `RFP|Revenue|Energy Supply|Gas`) %>%
mutate(`RFP|Revenue|Energy Supply|Electric Utilities` = `Price|Final Energy|Residential|Electricity` *
`Final Energy|Electricity` * 1000) %>% mutate(`RFP|Revenue|Energy Supply|Renewables` = `Price|Secondary Energy|Electricity` *
`Secondary Energy|Electricity|Non-Biomass Renewables` *
1000) %>% mutate(`RFP|Total Costs|End-Uses|Residential and Commercial` = `RFP|Direct emissions cost|End-Uses|Residential and Commercial` +
`RFP|Low-Carbon Investments|End-Uses|Energy Efficiency|Residential and Commercial`) %>%
mutate(`RFP|Revenue|End-Uses|Residential and Commercial` = `RFP|Total Costs|End-Uses|Residential and Commercial` *
i_ped * i_ptc) %>% mutate(`RFP|Total Costs|End-Uses|Industrial processes` = `RFP|Direct emissions cost|End-Uses|Industrial processes` +
`RFP|Indirect emissions cost|End-Uses|Industrial processes` +
`RFP|Low-Carbon Investments|End-Uses|Energy Efficiency|Industrial processes`) %>%
mutate(`RFP|Revenue|End-Uses|Industrial processes` = `RFP|Total Costs|End-Uses|Industrial processes` *
i_ped * i_ptc) %>% mutate(`RFP|Total Costs|End-Uses|Transportation` = `RFP|Direct emissions cost|End-Uses|Transportation` +
`RFP|Indirect emissions cost|End-Uses|Transportation` +
`RFP|Low-Carbon Investments|End-Uses|Energy Efficiency|Transportation`) %>%
mutate(`RFP|Revenue|End-Uses|Transportation` = `RFP|Total Costs|End-Uses|Transportation` *
i_ped * i_ptc) %>% mutate(`RFP|Revenue|Agriculture|Crops` = (`Agricultural Demand|Crops|Feed` +
`Agricultural Demand|Crops|Other`) * `Price|Agriculture|Non-Energy Crops|Index` *
CROPPRICE * RATIO20052010 + `Agricultural Demand|Crops|Energy` *
`Price|Primary Energy|Biomass` * BIOMASSENERGYCONTENT) %>%
mutate(`RFP|Revenue|Agriculture|Livestock` = (`Agricultural Demand|Livestock|Food` +
`Agricultural Demand|Livestock|Other`) * `Price|Agriculture|Livestock|Index` *
CROPPRICE * RATIO20052010) %>% mutate(`RFP|Revenue|Agriculture|Forestry` = `Carbon Sequestration|Land Use|Afforestation` *
`Price|Carbon` * (`Land Cover|Forest|Managed`/`Land Cover|Forest|Natural Forest`) *
PROPMANAGEDLAND) %>% gather(variable, value, -v_otherColumns) %>%
mutate(unit = "million US$2010") %>% select(v_colnames) %>%
filter(grepl("RFP", variable)) %>% mutate(value = as.numeric(value))
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
View(out)
detach("package:rfp", unload=TRUE)
library("rfp", lib.loc="~/R/win-library/3.5")
detach("package:rfp", unload=TRUE)
library("rfp", lib.loc="~/R/win-library/3.5")
rm(list = ls())
compute_rfp
cd_links_datapath = "C:/Users/min/IIASA/VAN RUIJVEN Bas - Finance/UNEP FI/Data/CDLINKS_stocktaking_MESSAGE_native_regions_FULL.csv"
df_cdlinks = read.csv(cd_links_datapath)
names(df_cdlinks) = tolower(names(df_cdlinks)) # PIK's rfp library has them in lower case.
rmapping = data.frame(region_data='World', region_assumption='World')
df_cdlinks_l = df_cdlinks %>% gather(key="period", "value", -(model:unit)) %>%
mutate(period = as.numeric(gsub("x", "", period))) %>%
filter(region=="World" & grepl("NPi", scenario)) %>%
mutate(region = factor(region, levels = levels(assumptions$DEC_OilGasCoalShares$region))) %>%
mutate(baseline = case_when(grepl("SSP1", scenario) ~ "NPi_SSP1_V4",
grepl("SSP3", scenario) ~ "NPi_SSP3_V4",
TRUE ~ "NPi_V4")) %>%
mutate(baseline = ifelse(scenario==baseline, NA, baseline)) # There must be NA's in baseline column.
df_rfp_pik_l = compute_rfp(df_cdlinks_l, rmapping, VERSION = "pik")
# df_rfp_pik_l = rfp_direct_cost(df_cdlinks_l, VERSION = "pik")
# df_rfp_pik_l = rfp_indirect_cost(df_cdlinks_l, VERSION = "pik")
# df_rfp_pik_l = rfp_lcinv(df_cdlinks_l, rmapping, VERSION = "pik")
# df_rfp_pik_l = rfp_revenue(df_cdlinks_l, VERSION = "pik")
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
df_rfp_unepfi1 = df_rfp_unepfi1_l %>% spread(period, value)
View(df_rfp_unepfi1)
compute_rfp
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
View(out)
detach("package:rfp", unload=TRUE)
library("rfp", lib.loc="~/R/win-library/3.5")
compute_rfp
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
compute_rfp
compute_rfp <- function(i_data, i_mapping_region, PED=1.0, PTC=1.0, VERSION="unepfi1", CHECK=FALSE, VERBOSE=FALSE) {
if (VERBOSE) cat("(compute_rfp) ------ [>>] Entering function... ------\n")
if (VERBOSE) {
cat("(compute_rfp) Check output of each RFP component:\n")
print(head(rfp_direct_cost(i_data, VERSION=VERSION, CHECK=FALSE, VERBOSE=FALSE)))
print(head(rfp_indirect_cost(i_data, VERSION=VERSION, CHECK=FALSE, VERBOSE=FALSE)))
print(head(rfp_lcinv(i_data, VERSION=VERSION, VERBOSE=FALSE)))
}
out <- rbind(
rfp_direct_cost(i_data, VERSION=VERSION, CHECK=CHECK, VERBOSE=VERBOSE),
rfp_indirect_cost(i_data, VERSION=VERSION, CHECK=CHECK, VERBOSE=VERBOSE),
rfp_lcinv(i_data, i_mapping_region, VERSION=VERSION, VERBOSE=VERBOSE))
out <- rfp_revenue(i_data, out, PED, PTC, VERSION=VERSION, VERBOSE=VERBOSE)
if (VERBOSE) cat("(compute_rfp) ------ [<<] Exiting function... ------\n\n")
return(out)
}
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
compute_rfp
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
compute_rfp
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
df_rfp_unepfi1 = df_rfp_unepfi1_l %>% spread(period, value)
View(df_rfp_unepfi1)
mapping_region
df_cdlinks_l = df_cdlinks %>% gather(key="period", "value", -(model:unit)) %>%
mutate(period = as.numeric(gsub("x", "", period))) %>%
filter(region=="World" ) %>%
mutate(region = factor(region, levels = levels(assumptions$DEC_OilGasCoalShares$region))) %>%
mutate(baseline = case_when(grepl("SSP1", scenario) ~ "NPi_SSP1_V4",
grepl("SSP3", scenario) ~ "NPi_SSP3_V4",
TRUE ~ "NPi_V4")) %>%
mutate(baseline = ifelse(scenario==baseline, NA, baseline)) # There must be NA's in baseline column.
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
df_cdlinks_l = df_cdlinks %>% gather(key="period", "value", -(model:unit)) %>%
mutate(period = as.numeric(gsub("x", "", period))) %>%
filter(region=="World" & !grepl("NoPolicy", scenario)) %>%
mutate(scenario = paste0("CD-LINKS_", gsub("_V4", "", scenario))) %>%
mutate(scenario = ifelse(grepl("SSP1|SSP3", scenario), scenario, paste0(scenario, "_SSP2"))) %>%
mutate(region = factor(region, levels = levels(assumptions$DEC_OilGasCoalShares$region))) %>%
mutate(baseline = case_when(grepl("SSP1", scenario) ~ "CD-LINKS_NPi_SSP1",
grepl("SSP3", scenario) ~ "CD-LINKS_NPi_SSP3",
TRUE ~ "CD-LINKS_NPi_SSP2")) %>%
mutate(baseline = ifelse(scenario==baseline, NA, baseline))
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
compute_rfp <- function(i_data, i_mapping_region, PED=1.0, PTC=1.0, VERSION="unepfi1", CHECK=FALSE, VERBOSE=FALSE) {
if (VERBOSE) cat("(compute_rfp) ------ [>>] Entering function... ------\n")
if (VERBOSE) {
cat("(compute_rfp) Check output of each RFP component:\n")
print(head(rfp_direct_cost(i_data, VERSION=VERSION, CHECK=FALSE, VERBOSE=FALSE)))
print(head(rfp_indirect_cost(i_data, VERSION=VERSION, CHECK=FALSE, VERBOSE=FALSE)))
print(head(rfp_lcinv(i_data, VERSION=VERSION, VERBOSE=FALSE)))
}
out <- rbind(
rfp_direct_cost(i_data, VERSION=VERSION, CHECK=CHECK, VERBOSE=VERBOSE),
rfp_indirect_cost(i_data, VERSION=VERSION, CHECK=CHECK, VERBOSE=VERBOSE),
rfp_lcinv(i_data, i_mapping_region, VERSION=VERSION, VERBOSE=VERBOSE))
out <- rfp_revenue(i_data, out, PED, PTC, VERSION=VERSION, VERBOSE=VERBOSE)
if (VERBOSE) cat("(compute_rfp) ------ [<<] Exiting function... ------\n\n")
return(out)
}
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
compute_rfp
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
detach("package:rfp", unload=TRUE)
library("rfp", lib.loc="~/R/win-library/3.5")
# df_rfp_unepfi1_l = rfp_direct_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
# df_rfp_unepfi1_l = rfp_indirect_cost(df_cdlinks_l, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = rfp_lcinv(df_cdlinks_l, rmapping, VERSION = "unepfi1", VERBOSE = TRUE)  # Trying to debug having all NA for indirect cost part
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
out <- tmp %>% select(-pathway, -unit) %>% filter(variable %in%
p_variables) %>% spread(variable, value) %>% mutate(`RFP|Low-Carbon Investments|Energy` = 1000 *
`Investment|Energy Supply`)
View(out)
names(tmp)
names(out)
View(tmp)
View(tmp)
View(out)
view(out)
View(out)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
i_variable
str(v_mapVariableUnit)
i_data %>% filter(variable %in% i_variable) %>% select(-c("unit")) %>%
spread(variable, value) %>% gather(variable, value,
-v_otherColumns)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=TRUE)
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
VERBOSE=TRUE
out <- tmp %>% select(-pathway, -unit) %>% filter(variable %in%
p_variables) %>% spread(variable, value) %>% mutate(`RFP|Low-Carbon Investments|Energy` = 1000 *
`Investment|Energy Supply`) %>% mutate(`RFP|Low-Carbon Investments|Energy|Electric Utilities` = 1000 *
(`Investment|Energy Supply|Electricity|Non-Biomass Renewables` +
`Investment|Energy Supply|Electricity|Transmission and Distribution` +
`Investment|Energy Supply|Electricity|Electricity Storage` +
`Investment|Energy Supply|Electricity|Coal|w/ CCS` +
`Investment|Energy Supply|Electricity|Oil|w/ CCS` +
`Investment|Energy Supply|Electricity|Gas|w/ CCS`))
out <- tmp %>% select(-pathway, -unit) %>% filter(variable %in%
p_variables) %>% spread(variable, value) %>% mutate(`RFP|Low-Carbon Investments|Energy` = 1000 *
`Investment|Energy Supply`) %>% mutate(`RFP|Low-Carbon Investments|Energy|Electric Utilities` = 1000 *
(`Investment|Energy Supply|Electricity|Non-Biomass Renewables` +
`Investment|Energy Supply|Electricity|Transmission and Distribution` +
`Investment|Energy Supply|Electricity|Electricity Storage` +
`Investment|Energy Supply|Electricity|Coal|w/ CCS` +
`Investment|Energy Supply|Electricity|Oil|w/ CCS` +
`Investment|Energy Supply|Electricity|Gas|w/ CCS`))
View(out)
detach("package:rfp", unload=TRUE)
library("rfp", lib.loc="~/R/win-library/3.5")
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
debugSource('H:/MyDocuments/Finance/Analysis/test_functions.R', echo=TRUE)
df_rfp_unepfi1_l = compute_rfp(df_cdlinks_l, i_mapping_region=rmapping, VERSION = "unepfi1", VERBOSE=FALSE)
out <- tmp %>% select(-pathway, -unit) %>% filter(variable %in%
p_variables) %>% spread(variable, value) %>% mutate(`RFP|Low-Carbon Investments|Energy` = 1000 *
`Investment|Energy Supply`) %>% mutate(`RFP|Low-Carbon Investments|Energy|Electric Utilities` = 1000 *
(`Investment|Energy Supply|Electricity|Non-Biomass Renewables` +
`Investment|Energy Supply|Electricity|Transmission and Distribution` +
`Investment|Energy Supply|Electricity|Electricity Storage` +
`Investment|Energy Supply|Electricity|Coal|w/ CCS` +
`Investment|Energy Supply|Electricity|Oil|w/ CCS` +
`Investment|Energy Supply|Electricity|Gas|w/ CCS`))
View(out)
